## ----eval=TRUE, message=FALSE, warning=FALSE-------------------------------------------------------------------------------------------------------
library(mixOmics)
X <- read.table("/Volumes/HassanLaCie/NGSProject_Mehrdad/Shared data/MA_15.05.2025/Normalized_DEseq2_invivo.txt", header = T)
View(X)
rm(list=ls())
library(limma)
library(edgeR)
library(DESeq2)
library(ggplot2)
library(EnsDb.Hsapiens.v86)
library(dplyr)
library(radiant)
#library(EnhancedVolcano)
library(tidyverse)
#BiocManager::install("clusterProfiler")
library(clusterProfiler)
library(RColorBrewer)
library(tximport)
library(ensembldb)
library(AnnotationHub)
library(org.Mm.eg.db)
library(DESeq2)
library(dplyr)
#hub = ensdb_109()
hub <- AnnotationHub()
#ensdb_query <- query(hub, c("EnsDb", "sapiens", "109"))
ensdb_query <- query(hub, c("GRCm39", "Ensembl"))
ensdb_query
#ensdb_109 <- ensdb_query[['AH109606']]
ensdb_111 <- ensdb_query[['AH116340']]
tx_data <- transcripts(ensdb_111, return.type = "DataFrame")
gene_data <- genes(ensdb_111, return.type = "DataFrame")
gen2symbol <- gene_data[,c("gene_id", "gene_name")]
tran2geneid <- tx_data[,c("gene_id", "tx_id_version")]
gen2symbol <- as.data.frame(gen2symbol)
tx2gene <- tx_data[,c("tx_id_version", "gene_id")]
tx2gene
gen2symbol
gen2symbol
View(gen2symbol)
X <- read.table("/Volumes/HassanLaCie/NGSProject_Mehrdad/Shared data/MA_15.05.2025/Normalized_DEseq2_invivo.txt", header = T)
View(X)
X <- read.table("/Volumes/HassanLaCie/NGSProject_Mehrdad/Shared data/MA_15.05.2025/Normalized_DEseq2_invivo.txt", header = T)
View(X)
X  <- merge(X, gen2symbol, by="gene_id")
View(X)
rownames(X) <- X$gene_name
X <- X[!duplicated(X$gene_name), ]
rownames(X) <- X$gene_name
View(X)
View(X)
X <- X[,-c(1, 6,7,8,9,16)]
View(X)
X <- t(X)
View(X)
View(X)
X$group <- c("CTRL", "CTRL", "CTRL", "CTRL", "NTF", "NTF", "NTF", "NTF", "NTF", "NTF")
View(X)
X <- read.table("/Volumes/HassanLaCie/NGSProject_Mehrdad/Shared data/MA_15.05.2025/Normalized_DEseq2_invivo.txt", header = T)
X  <- merge(X, gen2symbol, by="gene_id")
X <- X[!duplicated(X$gene_name), ]
rownames(X) <- X$gene_name
X$group <- c("CTRL", "CTRL", "CTRL", "CTRL", "NTF", "NTF", "NTF", "NTF", "NTF", "NTF")
X <- read.table("/Volumes/HassanLaCie/NGSProject_Mehrdad/Shared data/MA_15.05.2025/Normalized_DEseq2_invivo.txt", header = T)
X  <- merge(X, gen2symbol, by="gene_id")
X <- X[!duplicated(X$gene_name), ]
rownames(X) <- X$gene_name
X <- X[,-c(1, 6,7,8,9,16)]
View(X)
colnames(X) <- c("CTRL", "CTRL", "CTRL", "CTRL", "NTF", "NTF", "NTF", "NTF", "NTF", "NTF")
View(X)
colnames(X)
X <- t(X)
View(X)
## ----screeplot-fig, fig.cap='(ref:screeplot-fig)'--------------------------------------------------------------------------------------------------
tune.pca.multi <- tune.pca(X, ncomp = 10, scale = TRUE)
X <- X[, apply(X, 2, var) != 0]
View(X)
## ----screeplot-fig, fig.cap='(ref:screeplot-fig)'--------------------------------------------------------------------------------------------------
tune.pca.multi <- tune.pca(X, ncomp = 10, scale = TRUE)
plot(tune.pca.multi)
## ----echo=TRUE, message=FALSE----------------------------------------------------------------------------------------------------------------------
final.pca.multi <- pca(X, ncomp = 3, center = TRUE, scale = TRUE)
## --------------------------------------------------------------------------------------------------------------------------------------------------
final.pca.multi$var.tot
## --------------------------------------------------------------------------------------------------------------------------------------------------
final.pca.multi$prop_expl_var$X
## ---- eval = TRUE----------------------------------------------------------------------------------------------------------------------------------
final.pca.multi$cum.var
## ----echo=TRUE, message=FALSE----------------------------------------------------------------------------------------------------------------------
# Top variables on the first component only:
head(selectVar(final.pca.multi, comp = 1)$value)
## ----pca-ABCtrans-group, fig.cap='(ref:pca-ABCtrans-group)'----------------------------------------------------------------------------------------
plotIndiv(final.pca.multi,
comp = c(1, 2),   # Specify components to plot
ind.names = TRUE, # Show row names of samples
group = multidrug$cell.line$Class,
title = 'ABC transporters, PCA comp 1 - 2',
legend = TRUE, legend.title = 'Cell line')
rownames(X)
## ----pca-ABCtrans-group, fig.cap='(ref:pca-ABCtrans-group)'----------------------------------------------------------------------------------------
plotIndiv(final.pca.multi,
comp = c(1, 2),   # Specify components to plot
ind.names = TRUE, # Show row names of samples
group = rownames(X),
title = 'ABC transporters, PCA comp 1 - 2',
legend = TRUE, legend.title = 'Cell line')
## ----pca-ABCtrans-group, fig.cap='(ref:pca-ABCtrans-group)'----------------------------------------------------------------------------------------
plotIndiv(final.pca.multi,
comp = c(1, 2),   # Specify components to plot
ind.names = FALSE, # Show row names of samples
group = rownames(X),
title = 'ABC transporters, PCA comp 1 - 2',
legend = TRUE, legend.title = 'Cell line')
## ----pca-ABCtrans-group, fig.cap='(ref:pca-ABCtrans-group)'----------------------------------------------------------------------------------------
plotIndiv(final.pca.multi,
comp = c(1, 2),   # Specify components to plot
ind.names = FALSE, # Show row names of samples
group = rownames(X),
title = 'ABC transporters, PCA comp 1 - 2',
legend = TRUE, legend.title = 'Groups')
## ----pca-ABCtrans-group, fig.cap='(ref:pca-ABCtrans-group)'----------------------------------------------------------------------------------------
plotIndiv(final.pca.multi,
comp = c(1, 2),   # Specify components to plot
ind.names = FALSE, # Show row names of samples
group = rownames(X),
title = 'PCA comp 1 - 2',
legend = TRUE, legend.title = 'Groups')
## ----pca-ABCtrans-group, fig.cap='(ref:pca-ABCtrans-group)'----------------------------------------------------------------------------------------
plotIndiv(final.pca.multi,
comp = c(1, 2),   # Specify components to plot
ind.names = FALSE, # Show row names of samples
group = rownames(X),
title = 'PCA comp 1 - 2',
legend = TRUE, legend.title = 'Groups', ellipse = TRUE)
setwd("/Volumes/HassanLaCie/NGSProject_Mehrdad/Shared data/MA_15.05.2025")
png(filename = "PCA_unspervised_invivo_NTF_CTRL.png", width = 150, height = 150, res = 300, units = "mm")
plotIndiv(final.pca.multi,
comp = c(1, 2),   # Specify components to plot
ind.names = FALSE, # Show row names of samples
group = rownames(X),
title = 'PCA comp 1 - 2',
legend = TRUE, legend.title = 'Groups', ellipse = TRUE)
dev.off()
png(filename = "PCA_unspervised_invivo_NTF_CTRL.png", width = 200, height = 150, res = 300, units = "mm")
plotIndiv(final.pca.multi,
comp = c(1, 2),   # Specify components to plot
ind.names = FALSE, # Show row names of samples
group = rownames(X),
title = 'PCA comp 1 - 2',
legend = TRUE, legend.title = 'Groups', ellipse = TRUE)
dev.off()
png(filename = "PCA_unspervised_invivo_NTF_CTRL.png", width = 180, height = 150, res = 300, units = "mm")
plotIndiv(final.pca.multi,
comp = c(1, 2),   # Specify components to plot
ind.names = FALSE, # Show row names of samples
group = rownames(X),
title = 'PCA comp 1 - 2',
legend = TRUE, legend.title = 'Groups', ellipse = TRUE)
dev.off()
View(X)
Y <- rownames(X)
dim(X); length(Y)
## -------------------------------------------------------------------------------------------------------------------------------------------------
summary(Y)
## ----plsda-perf, fig.cap='(ref:plsda-perf)'-------------------------------------------------------------------------------------------------------
plsda.srbct <- plsda(X,Y, ncomp = 10)
View(X)
rownma
rownames(X)
rownames(X) <- gsub("[\\.0-9]", "", rownames(X))
View(X)
X <- read.table("/Volumes/HassanLaCie/NGSProject_Mehrdad/Shared data/MA_15.05.2025/Normalized_DEseq2_invivo.txt", header = T)
X  <- merge(X, gen2symbol, by="gene_id")
X <- X[!duplicated(X$gene_name), ]
rownames(X) <- X$gene_name
X <- X[,-c(1, 6,7,8,9,16)]
X <- t(X)
X <- X[, apply(X, 2, var) != 0]
View(X)
X <- read.table("/Volumes/HassanLaCie/NGSProject_Mehrdad/Shared data/MA_15.05.2025/Normalized_DEseq2_invivo.txt", header = T)
X  <- merge(X, gen2symbol, by="gene_id")
X <- X[!duplicated(X$gene_name), ]
rownames(X) <- X$gene_name
X <- X[,-c(1, 6,7,8,9,16)]
X <- data.frame(data_matrix,
row.names = c(rep("CTRL", 4), rep("NTF", 6)),
check.names = FALSE)
X <- t(X)
X <- read.table("/Volumes/HassanLaCie/NGSProject_Mehrdad/Shared data/MA_15.05.2025/Normalized_DEseq2_invivo.txt", header = T)
X  <- merge(X, gen2symbol, by="gene_id")
X <- X[!duplicated(X$gene_name), ]
rownames(X) <- X$gene_name
X <- X[,-c(1, 6,7,8,9,16)]
X <- data.frame(X,
row.names = c(rep("CTRL", 4), rep("NTF", 6)),
check.names = FALSE)
X <- read.table("/Volumes/HassanLaCie/NGSProject_Mehrdad/Shared data/MA_15.05.2025/Normalized_DEseq2_invivo.txt", header = T)
X  <- merge(X, gen2symbol, by="gene_id")
X <- X[!duplicated(X$gene_name), ]
rownames(X) <- X$gene_name
X <- X[,-c(1, 6,7,8,9,16)]
View(X)
X <- data.frame(X,
col.names = c(rep("CTRL", 4), rep("NTF", 6)),
check.names = FALSE)
X <- read.table("/Volumes/HassanLaCie/NGSProject_Mehrdad/Shared data/MA_15.05.2025/Normalized_DEseq2_invivo.txt", header = T)
X  <- merge(X, gen2symbol, by="gene_id")
X <- X[!duplicated(X$gene_name), ]
rownames(X) <- X$gene_name
X <- X[,-c(1, 6,7,8,9,16)]
colnames(X) <- c("CTRL", "CTRL", "CTRL", "CTRL", "NTF", "NTF", "NTF", "NTF", "NTF", "NTF")
X <- t(X)
X <- X[, apply(X, 2, var) != 0]
View(X)
# If you are creating the data frame:
X <- data.frame(X,
row.names = c(rep("CTRL", 4), rep("NTF", 6)),
check.names = FALSE)
X <- read.table("/Volumes/HassanLaCie/NGSProject_Mehrdad/Shared data/MA_15.05.2025/Normalized_DEseq2_invivo.txt", header = T)
X  <- merge(X, gen2symbol, by="gene_id")
X <- X[!duplicated(X$gene_name), ]
rownames(X) <- X$gene_name
X <- X[,-c(1, 6,7,8,9,16)]
colnames(X) <- c("CTRL.1", "CTRL.2", "CTRL.3", "CTRL.4", "NTF.1", "NTF.2", "NTF.3", "NTF.4", "NTF.5", "NTF.6")
X <- t(X)
X <- X[, apply(X, 2, var) != 0]
## ----plsda-perf, fig.cap='(ref:plsda-perf)'-------------------------------------------------------------------------------------------------------
plsda.srbct <- plsda(X,Y, ncomp = 10)
set.seed(30) # For reproducibility with this handbook, remove otherwise
perf.plsda.srbct <- perf(plsda.srbct, validation = 'Mfold', folds = 3,
progressBar = FALSE,  # Set to TRUE to track progress
nrepeat = 10)         # We suggest nrepeat = 50
## -------------------------------------------------------------------------------------------------------------------------------------------------
final.plsda.srbct <- plsda(X,Y, ncomp = 3)
## ----plsda-indiv12, echo = TRUE, results = 'hide', fig.show = 'hide', fig.path = 'Figures/PLSDA/'-------------------------------------------------
plotIndiv(final.plsda.srbct, ind.names = FALSE, legend=TRUE,
comp=c(1,2), ellipse = TRUE,
title = 'PLS-DA on SRBCT comp 1-2',
X.label = 'PLS-DA comp 1', Y.label = 'PLS-DA comp 2')
## ----plsda-indiv12, echo = TRUE, results = 'hide', fig.show = 'hide', fig.path = 'Figures/PLSDA/'-------------------------------------------------
plotIndiv(final.plsda.srbct, ind.names = FALSE, legend=TRUE,
comp=c(1,2), ellipse = TRUE,
title = 'PLS-DA comp 1-2',
X.label = 'PLS-DA comp 1', Y.label = 'PLS-DA comp 2')
## ----plsda-indiv12, echo = TRUE, results = 'hide', fig.show = 'hide', fig.path = 'Figures/PLSDA/'-------------------------------------------------
plotIndiv(final.plsda.srbct, ind.names = FALSE, legend=TRUE,
comp=c(1,2), ellipse = TRUE,
title = 'PLS-DA comp 1-2',
X.label = 'PLS-DA comp 1', Y.label = 'PLS-DA comp 2')
## ----plsda-indiv12, echo = TRUE, results = 'hide', fig.show = 'hide', fig.path = 'Figures/PLSDA/'-------------------------------------------------
png(filename = "PLS-DA_supervised_NTFvsCTRL_comp1.2.png", width = 180, height = 150, res = 300, units = "mm")
plotIndiv(final.plsda.srbct, ind.names = FALSE, legend=TRUE,
comp=c(1,2), ellipse = TRUE,
title = 'PLS-DA comp 1-2',
X.label = 'PLS-DA comp 1', Y.label = 'PLS-DA comp 2')
dev.off()
X <- read.table("/Volumes/HassanLaCie/NGSProject_Mehrdad/Shared data/MA_15.05.2025/Normalized_DEseq2_invivo.txt", header = T)
X  <- merge(X, gen2symbol, by="gene_id")
X <- X[!duplicated(X$gene_name), ]
rownames(X) <- X$gene_name
X <- X[,-c(1, 6,7,8,9,16)]
colnames(X) <- c("CTRL.1", "CTRL.2", "CTRL.3", "CTRL.4", "NTF.1", "NTF.2", "NTF.3", "NTF.4", "NTF.5", "NTF.6")
View(X)
df <- X[rownames(X) %in% genes,]
genes
genes <- c("Tlr1", "Mir15a", "Mir291a", "Sall4", "Hnf1b",
"Gata5", "Birc5", "C1qtnf4", "Nkrf", "Cxcr3", "Fbxw14")
df <- X[rownames(X) %in% genes,]
View(df)
mat_z <- t(apply(df,1, scale))
View(mat_z)
colnames(mat_z) <- c( "CTRL.R1", "CTRL.R2", "CTRL.R3", "CTRL.R4", "NTF.R1", "NTF.R2", "NTF.R3", "NTF.R4", "NTF.R5", "NTF.R6")
pheatmap(mat_z,
color = rev(redgreen(75)),
#cluster_rows = FALSE,
cluster_cols = TRUE,
row_order = c("CTRL_R1" ,"CTRL_R2", "CTRL_R3", "CTX_R1",  "CTX_R2" , "CTX_R3"),
clustering_distance_cols = "euclidean",
clustering_method = "complete")
library(pheatmap)
library("gplots")
pheatmap(mat_z,
color = rev(redgreen(75)),
#cluster_rows = FALSE,
cluster_cols = TRUE,
row_order = c("CTRL_R1" ,"CTRL_R2", "CTRL_R3", "CTX_R1",  "CTX_R2" , "CTX_R3"),
clustering_distance_cols = "euclidean",
clustering_method = "complete")
png(filename = "Heatmap_selectedGene1.png", width = 200, height = 150, units = "mm", res = 300)
pheatmap(mat_z,
color = rev(redgreen(75)),
#cluster_rows = FALSE,
cluster_cols = TRUE,
row_order = c("CTRL_R1" ,"CTRL_R2", "CTRL_R3", "CTX_R1",  "CTX_R2" , "CTX_R3"),
clustering_distance_cols = "euclidean",
clustering_method = "complete")
dev.off()
png(filename = "Heatmap_selectedGene1.png", width = 200, height = 150, units = "mm", res = 300)
pheatmap(mat_z,
color = rev(redgreen(75)),
#cluster_rows = FALSE,
cluster_cols = TRUE,
row_order = c("CTRL_R1" ,"CTRL_R2", "CTRL_R3", "CTX_R1",  "CTX_R2" , "CTX_R3"),
clustering_distance_cols = "euclidean",
clustering_method = "complete")
dev.off()
genes2 <- c("Tlr1", "C1qtnf4", "Nkrf", "Cxcr3")
df <- X[rownames(X) %in% genes2,]
View(df)
mat_z <- t(apply(df,1, scale))
colnames(mat_z) <- c( "CTRL.R1", "CTRL.R2", "CTRL.R3", "CTRL.R4", "NTF.R1", "NTF.R2", "NTF.R3", "NTF.R4", "NTF.R5", "NTF.R6")
library(pheatmap)
library("gplots")
pheatmap(mat_z,
color = rev(redgreen(75)),
#cluster_rows = FALSE,
cluster_cols = TRUE,
row_order = c("CTRL_R1" ,"CTRL_R2", "CTRL_R3", "CTX_R1",  "CTX_R2" , "CTX_R3"),
clustering_distance_cols = "euclidean",
clustering_method = "complete")
graphics.off()
pheatmap(mat_z,
color = rev(redgreen(75)),
#cluster_rows = FALSE,
cluster_cols = TRUE,
row_order = c("CTRL_R1" ,"CTRL_R2", "CTRL_R3", "CTX_R1",  "CTX_R2" , "CTX_R3"),
clustering_distance_cols = "euclidean",
clustering_method = "complete")
png(filename = "Heatmap_selected_genes2.png", width = 200, height = 150, units = "mm", res = 300)
pheatmap(mat_z,
color = rev(redgreen(75)),
#cluster_rows = FALSE,
cluster_cols = TRUE,
row_order = c("CTRL_R1" ,"CTRL_R2", "CTRL_R3", "CTX_R1",  "CTX_R2" , "CTX_R3"),
clustering_distance_cols = "euclidean",
clustering_method = "complete")
dev.off()
png(filename = "Heatmap_selected_genes2.png", width = 200, height = 150, units = "mm", res = 300)
pheatmap(mat_z,
color = rev(redgreen(75)),
#cluster_rows = FALSE,
cluster_cols = TRUE,
row_order = c("CTRL_R1" ,"CTRL_R2", "CTRL_R3", "CTX_R1",  "CTX_R2" , "CTX_R3"),
clustering_distance_cols = "euclidean",
clustering_method = "complete")
dev.off()
View(gene_data)
View(gene_data)
View(tx_data)
View(tx2gene)
View(X)
write.table(X, file = "Normalized_NTF_counts_geneName.txt", sep = "\t")
